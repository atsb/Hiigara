# Makefile.in generated by automake 1.16.5 from Makefile.am.
# src/Game/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



VPATH = ../../../src/Game
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/homeworldsdl
pkgincludedir = $(includedir)/homeworldsdl
pkglibdir = $(libdir)/homeworldsdl
pkglibexecdir = $(libexecdir)/homeworldsdl
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
target_triplet = x86_64-pc-linux-gnu
subdir = src/Game
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libhw_Game_a_AR = $(AR) $(ARFLAGS)
libhw_Game_a_LIBADD =
am_libhw_Game_a_OBJECTS = AIAttackMan.$(OBJEXT) AIDefenseMan.$(OBJEXT) \
	AIEvents.$(OBJEXT) AIFleetMan.$(OBJEXT) AIHandler.$(OBJEXT) \
	AIMoves.$(OBJEXT) AIOrders.$(OBJEXT) AIPlayer.$(OBJEXT) \
	AIResourceMan.$(OBJEXT) AIShip.$(OBJEXT) AITeam.$(OBJEXT) \
	AITrack.$(OBJEXT) AIUtilities.$(OBJEXT) AIVar.$(OBJEXT) \
	Alliance.$(OBJEXT) Animatic.$(OBJEXT) Attack.$(OBJEXT) \
	AutoDownloadMap.$(OBJEXT) AutoLOD.$(OBJEXT) Battle.$(OBJEXT) \
	BigFile.$(OBJEXT) Blobs.$(OBJEXT) BMP.$(OBJEXT) \
	Bounties.$(OBJEXT) B-Spline.$(OBJEXT) BTG.$(OBJEXT) \
	Camera.$(OBJEXT) CameraCommand.$(OBJEXT) Captaincy.$(OBJEXT) \
	ChannelFSM.$(OBJEXT) Chatting.$(OBJEXT) Clamp.$(OBJEXT) \
	Clipper.$(OBJEXT) Clouds.$(OBJEXT) Collision.$(OBJEXT) \
	Color.$(OBJEXT) ColPick.$(OBJEXT) CommandLayer.$(OBJEXT) \
	CommandNetwork.$(OBJEXT) CommandWrap.$(OBJEXT) \
	ConsMgr.$(OBJEXT) Crates.$(OBJEXT) Damage.$(OBJEXT) \
	Debug.$(OBJEXT) Demo.$(OBJEXT) Dock.$(OBJEXT) ETG.$(OBJEXT) \
	Eval.$(OBJEXT) FEFlow.$(OBJEXT) FEReg.$(OBJEXT) File.$(OBJEXT) \
	FlightMan.$(OBJEXT) FontReg.$(OBJEXT) Formation.$(OBJEXT) \
	GameChat.$(OBJEXT) GamePick.$(OBJEXT) Globals.$(OBJEXT) \
	Gun.$(OBJEXT) Hash.$(OBJEXT) HorseRace.$(OBJEXT) HS.$(OBJEXT) \
	InfoOverlay.$(OBJEXT) KAS.$(OBJEXT) KASFunc.$(OBJEXT) \
	KeyBindings.$(OBJEXT) Key.$(OBJEXT) KNITransform.$(OBJEXT) \
	LagPrint.$(OBJEXT) LaunchMgr.$(OBJEXT) LevelLoad.$(OBJEXT) \
	Light.$(OBJEXT) LinkedList.$(OBJEXT) LOD.$(OBJEXT) \
	MadLinkIn.$(OBJEXT) Matrix.$(OBJEXT) Memory.$(OBJEXT) \
	MeshAnim.$(OBJEXT) Mesh.$(OBJEXT) MEX.$(OBJEXT) \
	MultiplayerGame.$(OBJEXT) MultiplayerLANGame.$(OBJEXT) \
	NavLights.$(OBJEXT) Nebulae.$(OBJEXT) NetCheck.$(OBJEXT) \
	NIS.$(OBJEXT) Objectives.$(OBJEXT) ObjTypes.$(OBJEXT) \
	Options.$(OBJEXT) Particle.$(OBJEXT) Physics.$(OBJEXT) \
	PiePlate.$(OBJEXT) Ping.$(OBJEXT) PlugScreen.$(OBJEXT) \
	ProfileTimers.$(OBJEXT) Randy.$(OBJEXT) Region.$(OBJEXT) \
	ResCollect.$(OBJEXT) ResearchAPI.$(OBJEXT) \
	ResearchGUI.$(OBJEXT) SaveGame.$(OBJEXT) ScenPick.$(OBJEXT) \
	Scroller.$(OBJEXT) Select.$(OBJEXT) Sensors.$(OBJEXT) \
	Shader.$(OBJEXT) ShipSelect.$(OBJEXT) ShipView.$(OBJEXT) \
	SinglePlayer.$(OBJEXT) SoundEvent.$(OBJEXT) \
	SoundEventPlay.$(OBJEXT) SoundEventStop.$(OBJEXT) \
	SpeechEvent.$(OBJEXT) Star3d.$(OBJEXT) Stats.$(OBJEXT) \
	StatScript.$(OBJEXT) StringSupport.$(OBJEXT) \
	Subtitle.$(OBJEXT) Tactical.$(OBJEXT) Tactics.$(OBJEXT) \
	TaskBar.$(OBJEXT) Task.$(OBJEXT) Teams.$(OBJEXT) \
	Timer.$(OBJEXT) TitanNet.$(OBJEXT) Tracking.$(OBJEXT) \
	TradeMgr.$(OBJEXT) Trails.$(OBJEXT) Transformer.$(OBJEXT) \
	Tutor.$(OBJEXT) Tweak.$(OBJEXT) Twiddle.$(OBJEXT) \
	Types.$(OBJEXT) UIControls.$(OBJEXT) Undo.$(OBJEXT) \
	Universe.$(OBJEXT) UnivUpdate.$(OBJEXT) Vector.$(OBJEXT) \
	Volume.$(OBJEXT)
libhw_Game_a_OBJECTS = $(am_libhw_Game_a_OBJECTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/AIAttackMan.Po \
	./$(DEPDIR)/AIDefenseMan.Po ./$(DEPDIR)/AIEvents.Po \
	./$(DEPDIR)/AIFleetMan.Po ./$(DEPDIR)/AIHandler.Po \
	./$(DEPDIR)/AIMoves.Po ./$(DEPDIR)/AIOrders.Po \
	./$(DEPDIR)/AIPlayer.Po ./$(DEPDIR)/AIResourceMan.Po \
	./$(DEPDIR)/AIShip.Po ./$(DEPDIR)/AITeam.Po \
	./$(DEPDIR)/AITrack.Po ./$(DEPDIR)/AIUtilities.Po \
	./$(DEPDIR)/AIVar.Po ./$(DEPDIR)/Alliance.Po \
	./$(DEPDIR)/Animatic.Po ./$(DEPDIR)/Attack.Po \
	./$(DEPDIR)/AutoDownloadMap.Po ./$(DEPDIR)/AutoLOD.Po \
	./$(DEPDIR)/B-Spline.Po ./$(DEPDIR)/BMP.Po ./$(DEPDIR)/BTG.Po \
	./$(DEPDIR)/Battle.Po ./$(DEPDIR)/BigFile.Po \
	./$(DEPDIR)/Blobs.Po ./$(DEPDIR)/Bounties.Po \
	./$(DEPDIR)/Camera.Po ./$(DEPDIR)/CameraCommand.Po \
	./$(DEPDIR)/Captaincy.Po ./$(DEPDIR)/ChannelFSM.Po \
	./$(DEPDIR)/Chatting.Po ./$(DEPDIR)/Clamp.Po \
	./$(DEPDIR)/Clipper.Po ./$(DEPDIR)/Clouds.Po \
	./$(DEPDIR)/ColPick.Po ./$(DEPDIR)/Collision.Po \
	./$(DEPDIR)/Color.Po ./$(DEPDIR)/CommandLayer.Po \
	./$(DEPDIR)/CommandNetwork.Po ./$(DEPDIR)/CommandWrap.Po \
	./$(DEPDIR)/ConsMgr.Po ./$(DEPDIR)/Crates.Po \
	./$(DEPDIR)/Damage.Po ./$(DEPDIR)/Debug.Po ./$(DEPDIR)/Demo.Po \
	./$(DEPDIR)/Dock.Po ./$(DEPDIR)/ETG.Po ./$(DEPDIR)/Eval.Po \
	./$(DEPDIR)/FEFlow.Po ./$(DEPDIR)/FEReg.Po ./$(DEPDIR)/File.Po \
	./$(DEPDIR)/FlightMan.Po ./$(DEPDIR)/FontReg.Po \
	./$(DEPDIR)/Formation.Po ./$(DEPDIR)/GameChat.Po \
	./$(DEPDIR)/GamePick.Po ./$(DEPDIR)/Globals.Po \
	./$(DEPDIR)/Gun.Po ./$(DEPDIR)/HS.Po ./$(DEPDIR)/Hash.Po \
	./$(DEPDIR)/HorseRace.Po ./$(DEPDIR)/InfoOverlay.Po \
	./$(DEPDIR)/KAS.Po ./$(DEPDIR)/KASFunc.Po \
	./$(DEPDIR)/KNITransform.Po ./$(DEPDIR)/Key.Po \
	./$(DEPDIR)/KeyBindings.Po ./$(DEPDIR)/LOD.Po \
	./$(DEPDIR)/LagPrint.Po ./$(DEPDIR)/LaunchMgr.Po \
	./$(DEPDIR)/LevelLoad.Po ./$(DEPDIR)/Light.Po \
	./$(DEPDIR)/LinkedList.Po ./$(DEPDIR)/MEX.Po \
	./$(DEPDIR)/MadLinkIn.Po ./$(DEPDIR)/Matrix.Po \
	./$(DEPDIR)/Memory.Po ./$(DEPDIR)/Mesh.Po \
	./$(DEPDIR)/MeshAnim.Po ./$(DEPDIR)/MultiplayerGame.Po \
	./$(DEPDIR)/MultiplayerLANGame.Po ./$(DEPDIR)/NIS.Po \
	./$(DEPDIR)/NavLights.Po ./$(DEPDIR)/Nebulae.Po \
	./$(DEPDIR)/NetCheck.Po ./$(DEPDIR)/ObjTypes.Po \
	./$(DEPDIR)/Objectives.Po ./$(DEPDIR)/Options.Po \
	./$(DEPDIR)/Particle.Po ./$(DEPDIR)/Physics.Po \
	./$(DEPDIR)/PiePlate.Po ./$(DEPDIR)/Ping.Po \
	./$(DEPDIR)/PlugScreen.Po ./$(DEPDIR)/ProfileTimers.Po \
	./$(DEPDIR)/Randy.Po ./$(DEPDIR)/Region.Po \
	./$(DEPDIR)/ResCollect.Po ./$(DEPDIR)/ResearchAPI.Po \
	./$(DEPDIR)/ResearchGUI.Po ./$(DEPDIR)/SaveGame.Po \
	./$(DEPDIR)/ScenPick.Po ./$(DEPDIR)/Scroller.Po \
	./$(DEPDIR)/Select.Po ./$(DEPDIR)/Sensors.Po \
	./$(DEPDIR)/Shader.Po ./$(DEPDIR)/ShipSelect.Po \
	./$(DEPDIR)/ShipView.Po ./$(DEPDIR)/SinglePlayer.Po \
	./$(DEPDIR)/SoundEvent.Po ./$(DEPDIR)/SoundEventPlay.Po \
	./$(DEPDIR)/SoundEventStop.Po ./$(DEPDIR)/SpeechEvent.Po \
	./$(DEPDIR)/Star3d.Po ./$(DEPDIR)/StatScript.Po \
	./$(DEPDIR)/Stats.Po ./$(DEPDIR)/StringSupport.Po \
	./$(DEPDIR)/Subtitle.Po ./$(DEPDIR)/Tactical.Po \
	./$(DEPDIR)/Tactics.Po ./$(DEPDIR)/Task.Po \
	./$(DEPDIR)/TaskBar.Po ./$(DEPDIR)/Teams.Po \
	./$(DEPDIR)/Timer.Po ./$(DEPDIR)/TitanNet.Po \
	./$(DEPDIR)/Tracking.Po ./$(DEPDIR)/TradeMgr.Po \
	./$(DEPDIR)/Trails.Po ./$(DEPDIR)/Transformer.Po \
	./$(DEPDIR)/Tutor.Po ./$(DEPDIR)/Tweak.Po \
	./$(DEPDIR)/Twiddle.Po ./$(DEPDIR)/Types.Po \
	./$(DEPDIR)/UIControls.Po ./$(DEPDIR)/Undo.Po \
	./$(DEPDIR)/UnivUpdate.Po ./$(DEPDIR)/Universe.Po \
	./$(DEPDIR)/Vector.Po ./$(DEPDIR)/Volume.Po
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libhw_Game_a_SOURCES)
DIST_SOURCES = $(libhw_Game_a_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/config/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} '/home/adam/Downloads/Hiigara-wasm/Hiigara-wasm/config/missing' aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AS = as
AUTOCONF = ${SHELL} '/home/adam/Downloads/Hiigara-wasm/Hiigara-wasm/config/missing' autoconf
AUTOHEADER = ${SHELL} '/home/adam/Downloads/Hiigara-wasm/Hiigara-wasm/config/missing' autoheader
AUTOMAKE = ${SHELL} '/home/adam/Downloads/Hiigara-wasm/Hiigara-wasm/config/missing' automake-1.16
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CC_FOR_BUILD = gcc
CFLAGS = -g -O2 -D_X86_64 -D_X86_64_FIX_ME -DGENERIC_ETGCALLFUNCTION  -D_LINUX_FIX_ME  -L/usr/local/lib -Wl,-rpath,/usr/local/lib -Wl,--enable-new-dtags -lSDL2 -DHW_GAME_HOMEWORLD -DHW_BUILD_FOR_DISTRIBUTION -I/usr/local/include/SDL2 -D_REENTRANT 
CPPFLAGS =  -D_LINUX_FIX_ME 
CSCOPE = cscope
CTAGS = ctags
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = dlltool
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
ETAGS = etags
EXEEXT = 
FGREP = /usr/bin/grep -F
GL_LIBS = -lGL -lm -lGLEW
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = -L/usr/local/lib -Wl,-rpath,/usr/local/lib -Wl,--enable-new-dtags -lSDL2 
LEX = flex
LEXLIB = -ll 
LEX_OUTPUT_ROOT = lex.yy
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} '/home/adam/Downloads/Hiigara-wasm/Hiigara-wasm/config/missing' makeinfo
MANIFEST_TOOL = :
MEMORYMGR = jmemansi
MKDIR_P = /usr/bin/mkdir -p
MOVIE_LIBS = 
NET_LIBS = 
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = homeworldsdl
PACKAGE_BUGREPORT = baucheta@gmail.com
PACKAGE_NAME = HomeworldSDL
PACKAGE_STRING = HomeworldSDL 1.0.2
PACKAGE_TARNAME = homeworldsdl
PACKAGE_URL = 
PACKAGE_VERSION = 1.0.2
PATH_SEPARATOR = :
RANLIB = ranlib
SDL_CFLAGS = -I/usr/local/include/SDL2 -D_REENTRANT
SDL_CONFIG = /usr/local/bin/sdl2-config
SDL_LIBS = -L/usr/local/lib -Wl,-rpath,/usr/local/lib -Wl,--enable-new-dtags -lSDL2
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/bash
SSE_FLAGS = 
STRIP = strip
TRANSFORM = 
VERSION = 1.0.2
YACC = bison -y
YFLAGS = 
abs_builddir = /home/adam/Downloads/Hiigara-wasm/Hiigara-wasm/Linux/src/Game
abs_srcdir = /home/adam/Downloads/Hiigara-wasm/Hiigara-wasm/Linux/../src/Game
abs_top_builddir = /home/adam/Downloads/Hiigara-wasm/Hiigara-wasm/Linux
abs_top_srcdir = /home/adam/Downloads/Hiigara-wasm/Hiigara-wasm/Linux/..
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/adam/Downloads/Hiigara-wasm/Hiigara-wasm/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = ../../../src/Game
sysconfdir = ${prefix}/etc
target = x86_64-pc-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = pc
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../../..

# Remove rgl Includes.
# INCLUDES = -I$(top_srcdir)/src/ThirdParty/CRC -I$(top_srcdir)/src/ThirdParty/JPG -I$(top_srcdir)/src/ThirdParty/LZSS -I$(top_srcdir)/src/rgl -I$(top_srcdir)/src/SDL -I$(top_srcdir)/src/Ships -I$(top_srcdir)/src/ThirdParty/Titan
AM_CPPFLAGS = -I$(top_srcdir)/src/ThirdParty/CRC -I$(top_srcdir)/src/ThirdParty/JPG -I$(top_srcdir)/src/ThirdParty/LZSS -I$(top_srcdir)/src/SDL -I$(top_srcdir)/src/Ships -I$(top_srcdir)/src/ThirdParty/Titan

# Task functions rely on the frame pointer, but it doesn't seem that we can
# enable it on a per-function basis with GCC.
# Another option would be to split off the tasks into separate sources and
# compile them without using the frame pointer.

# GCC in Mingw32 defaults to -malign-double
#  Original CFLAGS line
# CFLAGS += -fno-omit-frame-pointer -mno-align-double
#  Additional Modified CFLAGS line
# CFLAGS += -malign-double -Wall -fno-strict-aliasing -Wextra -Wmissing-prototypes -Wmissing-declarations -Wredundant-decls
AM_CFLAGS = -Wall -fno-strict-aliasing -Wextra
noinst_LIBRARIES = libhw_Game.a
libhw_Game_a_SOURCES = AIAttackMan.c AIAttackMan.h AIDefenseMan.c \
	AIDefenseMan.h AIEvents.c AIEvents.h AIFeatures.h AIFleetMan.c \
	AIFleetMan.h AIHandler.c AIHandler.h AIMoves.c AIMoves.h \
	AIOrders.c AIOrders.h AIPlayer.c AIPlayer.h AIResourceMan.c \
	AIResourceMan.h AIShip.c AIShip.h AITeam.c AITeam.h AITrack.c \
	AITrack.h AIUtilities.c AIUtilities.h AIVar.c AIVar.h \
	Alliance.c Alliance.h Animatic.c Animatic.h Attack.c Attack.h \
	Attributes.h AutoDownloadMap.c AutoDownloadMap.h AutoLOD.c \
	AutoLOD.h Battle.c Battle.h BigFile.c BigFile.h Blobs.c \
	Blobs.h BMP.c BMP.h Bounties.c Bounties.h B-Spline.c \
	B-Spline.h BTG.c BTG.h Camera.c CameraCommand.c \
	CameraCommand.h Camera.h Captaincy.c Captaincy.h ChannelFSM.c \
	ChannelFSM.h Chatting.c Chatting.h Clamp.c Clamp.h ClassDefs.h \
	Clipper.c Clipper.h Clouds.c Clouds.h Collision.c Collision.h \
	Color.c Color.h ColPick.c ColPick.h CommandDefs.h \
	CommandLayer.c CommandLayer.h CommandNetwork.c \
	CommandNetwork.h CommandWrap.c CommandWrap.h ConsMgr.c \
	ConsMgr.h cpuid.h Crates.c Crates.h Damage.c Damage.h Debug.c \
	Debug.h Demo.c Demo.h Dock.c Dock.h ETG.c ETG.h Eval.c Eval.h \
	FastMath.h FEColour.h FEFlow.c FEFlow.h FEReg.c FEReg.h File.c \
	File.h FlightMan.c FlightManDefs.h FlightMan.h FontReg.c \
	FontReg.h Formation.c FormationDefs.h Formation.h GameChat.c \
	GameChat.h GamePick.c GamePick.h GameStats.h Globals.c \
	Globals.h Gun.c Gun.h Hash.c Hash.h HorseRace.c HorseRace.h \
	HS.c HS.h InfoOverlay.c InfoOverlay.h KAS.c KASFunc.c \
	KASFunc.h KAS.h KeyBindings.c KeyBindings.h Key.c Key.h \
	KNITransform.c LagPrint.c LagPrint.h LaunchMgr.c LaunchMgr.h \
	LevelLoad.c LevelLoad.h Light.c Light.h LinkedList.c \
	LinkedList.h LOD.c LOD.h MadLinkIn.c MadLinkInDefs.h \
	MadLinkIn.h Matrix.c Matrix.h MaxMultiplayer.h Memory.c \
	Memory.h MeshAnim.c MeshAnim.h Mesh.c Mesh.h MEX.c MEX.h \
	MultiplayerGame.c MultiplayerGame.h MultiplayerLANGame.c \
	MultiplayerLANGame.h NavLights.c NavLights.h Nebulae.c \
	Nebulae.h NetCheck.c NetCheck.h NIS.c NIS.h Objectives.c \
	Objectives.h ObjTypes.c ObjTypes.h Options.c Options.h \
	Particle.c Particle.h Physics.c Physics.h PiePlate.c \
	PiePlate.h Ping.c Ping.h PlugScreen.c PlugScreen.h \
	ProfileTimers.c ProfileTimers.h RaceDefs.h Randy.c Randy.h \
	Region.c Region.h ResCollect.c ResCollect.h ResearchAPI.c \
	ResearchAPI.h ResearchGUI.c ResearchGUI.h SaveGame.c \
	SaveGame.h ScenPick.c ScenPick.h Scroller.c Scroller.h \
	Select.c Select.h Sensors.c Sensors.h Shader.c Shader.h \
	ShipSelect.c ShipSelect.h ShipView.c ShipView.h SinglePlayer.c \
	SinglePlayer.h SoundEvent.c SoundEventDefs.h SoundEvent.h \
	SoundEventPlay.c SoundEventPrivate.h SoundEventStop.c \
	SoundMusic.h SoundStructs.h SpaceObj.h SpeechEvent.c \
	SpeechEvent.h Star3d.c Star3d.h Stats.c StatScript.c \
	StatScript.h Stats.h StringSupport.c StringSupport.h \
	StringsOnly.h Subtitle.c Subtitle.h Switches.h Tactical.c \
	Tactical.h Tactics.c Tactics.h TaskBar.c TaskBar.h Task.c \
	Task.h Teams.c Teams.h Timer.c Timer.h TitanNet.c TitanNet.h \
	Tracking.c Tracking.h TradeMgr.c TradeMgr.h Trails.c Trails.h \
	Transformer.c Transformer.h Tutor.c Tutor.h Tweak.c Tweak.h \
	Twiddle.c Twiddle.h Types.c Types.h UIControls.c UIControls.h \
	Undo.c Undo.h Universe.c Universe.h UnivUpdate.c UnivUpdate.h \
	Vector.c Vector.h VolTweakDefs.h Volume.c Volume.h \
	wrapped_functions.h
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Game/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Game/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

libhw_Game.a: $(libhw_Game_a_OBJECTS) $(libhw_Game_a_DEPENDENCIES) $(EXTRA_libhw_Game_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libhw_Game.a
	$(AM_V_AR)$(libhw_Game_a_AR) libhw_Game.a $(libhw_Game_a_OBJECTS) $(libhw_Game_a_LIBADD)
	$(AM_V_at)$(RANLIB) libhw_Game.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/AIAttackMan.Po # am--include-marker
include ./$(DEPDIR)/AIDefenseMan.Po # am--include-marker
include ./$(DEPDIR)/AIEvents.Po # am--include-marker
include ./$(DEPDIR)/AIFleetMan.Po # am--include-marker
include ./$(DEPDIR)/AIHandler.Po # am--include-marker
include ./$(DEPDIR)/AIMoves.Po # am--include-marker
include ./$(DEPDIR)/AIOrders.Po # am--include-marker
include ./$(DEPDIR)/AIPlayer.Po # am--include-marker
include ./$(DEPDIR)/AIResourceMan.Po # am--include-marker
include ./$(DEPDIR)/AIShip.Po # am--include-marker
include ./$(DEPDIR)/AITeam.Po # am--include-marker
include ./$(DEPDIR)/AITrack.Po # am--include-marker
include ./$(DEPDIR)/AIUtilities.Po # am--include-marker
include ./$(DEPDIR)/AIVar.Po # am--include-marker
include ./$(DEPDIR)/Alliance.Po # am--include-marker
include ./$(DEPDIR)/Animatic.Po # am--include-marker
include ./$(DEPDIR)/Attack.Po # am--include-marker
include ./$(DEPDIR)/AutoDownloadMap.Po # am--include-marker
include ./$(DEPDIR)/AutoLOD.Po # am--include-marker
include ./$(DEPDIR)/B-Spline.Po # am--include-marker
include ./$(DEPDIR)/BMP.Po # am--include-marker
include ./$(DEPDIR)/BTG.Po # am--include-marker
include ./$(DEPDIR)/Battle.Po # am--include-marker
include ./$(DEPDIR)/BigFile.Po # am--include-marker
include ./$(DEPDIR)/Blobs.Po # am--include-marker
include ./$(DEPDIR)/Bounties.Po # am--include-marker
include ./$(DEPDIR)/Camera.Po # am--include-marker
include ./$(DEPDIR)/CameraCommand.Po # am--include-marker
include ./$(DEPDIR)/Captaincy.Po # am--include-marker
include ./$(DEPDIR)/ChannelFSM.Po # am--include-marker
include ./$(DEPDIR)/Chatting.Po # am--include-marker
include ./$(DEPDIR)/Clamp.Po # am--include-marker
include ./$(DEPDIR)/Clipper.Po # am--include-marker
include ./$(DEPDIR)/Clouds.Po # am--include-marker
include ./$(DEPDIR)/ColPick.Po # am--include-marker
include ./$(DEPDIR)/Collision.Po # am--include-marker
include ./$(DEPDIR)/Color.Po # am--include-marker
include ./$(DEPDIR)/CommandLayer.Po # am--include-marker
include ./$(DEPDIR)/CommandNetwork.Po # am--include-marker
include ./$(DEPDIR)/CommandWrap.Po # am--include-marker
include ./$(DEPDIR)/ConsMgr.Po # am--include-marker
include ./$(DEPDIR)/Crates.Po # am--include-marker
include ./$(DEPDIR)/Damage.Po # am--include-marker
include ./$(DEPDIR)/Debug.Po # am--include-marker
include ./$(DEPDIR)/Demo.Po # am--include-marker
include ./$(DEPDIR)/Dock.Po # am--include-marker
include ./$(DEPDIR)/ETG.Po # am--include-marker
include ./$(DEPDIR)/Eval.Po # am--include-marker
include ./$(DEPDIR)/FEFlow.Po # am--include-marker
include ./$(DEPDIR)/FEReg.Po # am--include-marker
include ./$(DEPDIR)/File.Po # am--include-marker
include ./$(DEPDIR)/FlightMan.Po # am--include-marker
include ./$(DEPDIR)/FontReg.Po # am--include-marker
include ./$(DEPDIR)/Formation.Po # am--include-marker
include ./$(DEPDIR)/GameChat.Po # am--include-marker
include ./$(DEPDIR)/GamePick.Po # am--include-marker
include ./$(DEPDIR)/Globals.Po # am--include-marker
include ./$(DEPDIR)/Gun.Po # am--include-marker
include ./$(DEPDIR)/HS.Po # am--include-marker
include ./$(DEPDIR)/Hash.Po # am--include-marker
include ./$(DEPDIR)/HorseRace.Po # am--include-marker
include ./$(DEPDIR)/InfoOverlay.Po # am--include-marker
include ./$(DEPDIR)/KAS.Po # am--include-marker
include ./$(DEPDIR)/KASFunc.Po # am--include-marker
include ./$(DEPDIR)/KNITransform.Po # am--include-marker
include ./$(DEPDIR)/Key.Po # am--include-marker
include ./$(DEPDIR)/KeyBindings.Po # am--include-marker
include ./$(DEPDIR)/LOD.Po # am--include-marker
include ./$(DEPDIR)/LagPrint.Po # am--include-marker
include ./$(DEPDIR)/LaunchMgr.Po # am--include-marker
include ./$(DEPDIR)/LevelLoad.Po # am--include-marker
include ./$(DEPDIR)/Light.Po # am--include-marker
include ./$(DEPDIR)/LinkedList.Po # am--include-marker
include ./$(DEPDIR)/MEX.Po # am--include-marker
include ./$(DEPDIR)/MadLinkIn.Po # am--include-marker
include ./$(DEPDIR)/Matrix.Po # am--include-marker
include ./$(DEPDIR)/Memory.Po # am--include-marker
include ./$(DEPDIR)/Mesh.Po # am--include-marker
include ./$(DEPDIR)/MeshAnim.Po # am--include-marker
include ./$(DEPDIR)/MultiplayerGame.Po # am--include-marker
include ./$(DEPDIR)/MultiplayerLANGame.Po # am--include-marker
include ./$(DEPDIR)/NIS.Po # am--include-marker
include ./$(DEPDIR)/NavLights.Po # am--include-marker
include ./$(DEPDIR)/Nebulae.Po # am--include-marker
include ./$(DEPDIR)/NetCheck.Po # am--include-marker
include ./$(DEPDIR)/ObjTypes.Po # am--include-marker
include ./$(DEPDIR)/Objectives.Po # am--include-marker
include ./$(DEPDIR)/Options.Po # am--include-marker
include ./$(DEPDIR)/Particle.Po # am--include-marker
include ./$(DEPDIR)/Physics.Po # am--include-marker
include ./$(DEPDIR)/PiePlate.Po # am--include-marker
include ./$(DEPDIR)/Ping.Po # am--include-marker
include ./$(DEPDIR)/PlugScreen.Po # am--include-marker
include ./$(DEPDIR)/ProfileTimers.Po # am--include-marker
include ./$(DEPDIR)/Randy.Po # am--include-marker
include ./$(DEPDIR)/Region.Po # am--include-marker
include ./$(DEPDIR)/ResCollect.Po # am--include-marker
include ./$(DEPDIR)/ResearchAPI.Po # am--include-marker
include ./$(DEPDIR)/ResearchGUI.Po # am--include-marker
include ./$(DEPDIR)/SaveGame.Po # am--include-marker
include ./$(DEPDIR)/ScenPick.Po # am--include-marker
include ./$(DEPDIR)/Scroller.Po # am--include-marker
include ./$(DEPDIR)/Select.Po # am--include-marker
include ./$(DEPDIR)/Sensors.Po # am--include-marker
include ./$(DEPDIR)/Shader.Po # am--include-marker
include ./$(DEPDIR)/ShipSelect.Po # am--include-marker
include ./$(DEPDIR)/ShipView.Po # am--include-marker
include ./$(DEPDIR)/SinglePlayer.Po # am--include-marker
include ./$(DEPDIR)/SoundEvent.Po # am--include-marker
include ./$(DEPDIR)/SoundEventPlay.Po # am--include-marker
include ./$(DEPDIR)/SoundEventStop.Po # am--include-marker
include ./$(DEPDIR)/SpeechEvent.Po # am--include-marker
include ./$(DEPDIR)/Star3d.Po # am--include-marker
include ./$(DEPDIR)/StatScript.Po # am--include-marker
include ./$(DEPDIR)/Stats.Po # am--include-marker
include ./$(DEPDIR)/StringSupport.Po # am--include-marker
include ./$(DEPDIR)/Subtitle.Po # am--include-marker
include ./$(DEPDIR)/Tactical.Po # am--include-marker
include ./$(DEPDIR)/Tactics.Po # am--include-marker
include ./$(DEPDIR)/Task.Po # am--include-marker
include ./$(DEPDIR)/TaskBar.Po # am--include-marker
include ./$(DEPDIR)/Teams.Po # am--include-marker
include ./$(DEPDIR)/Timer.Po # am--include-marker
include ./$(DEPDIR)/TitanNet.Po # am--include-marker
include ./$(DEPDIR)/Tracking.Po # am--include-marker
include ./$(DEPDIR)/TradeMgr.Po # am--include-marker
include ./$(DEPDIR)/Trails.Po # am--include-marker
include ./$(DEPDIR)/Transformer.Po # am--include-marker
include ./$(DEPDIR)/Tutor.Po # am--include-marker
include ./$(DEPDIR)/Tweak.Po # am--include-marker
include ./$(DEPDIR)/Twiddle.Po # am--include-marker
include ./$(DEPDIR)/Types.Po # am--include-marker
include ./$(DEPDIR)/UIControls.Po # am--include-marker
include ./$(DEPDIR)/Undo.Po # am--include-marker
include ./$(DEPDIR)/UnivUpdate.Po # am--include-marker
include ./$(DEPDIR)/Universe.Po # am--include-marker
include ./$(DEPDIR)/Vector.Po # am--include-marker
include ./$(DEPDIR)/Volume.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLIBRARIES \
	mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/AIAttackMan.Po
	-rm -f ./$(DEPDIR)/AIDefenseMan.Po
	-rm -f ./$(DEPDIR)/AIEvents.Po
	-rm -f ./$(DEPDIR)/AIFleetMan.Po
	-rm -f ./$(DEPDIR)/AIHandler.Po
	-rm -f ./$(DEPDIR)/AIMoves.Po
	-rm -f ./$(DEPDIR)/AIOrders.Po
	-rm -f ./$(DEPDIR)/AIPlayer.Po
	-rm -f ./$(DEPDIR)/AIResourceMan.Po
	-rm -f ./$(DEPDIR)/AIShip.Po
	-rm -f ./$(DEPDIR)/AITeam.Po
	-rm -f ./$(DEPDIR)/AITrack.Po
	-rm -f ./$(DEPDIR)/AIUtilities.Po
	-rm -f ./$(DEPDIR)/AIVar.Po
	-rm -f ./$(DEPDIR)/Alliance.Po
	-rm -f ./$(DEPDIR)/Animatic.Po
	-rm -f ./$(DEPDIR)/Attack.Po
	-rm -f ./$(DEPDIR)/AutoDownloadMap.Po
	-rm -f ./$(DEPDIR)/AutoLOD.Po
	-rm -f ./$(DEPDIR)/B-Spline.Po
	-rm -f ./$(DEPDIR)/BMP.Po
	-rm -f ./$(DEPDIR)/BTG.Po
	-rm -f ./$(DEPDIR)/Battle.Po
	-rm -f ./$(DEPDIR)/BigFile.Po
	-rm -f ./$(DEPDIR)/Blobs.Po
	-rm -f ./$(DEPDIR)/Bounties.Po
	-rm -f ./$(DEPDIR)/Camera.Po
	-rm -f ./$(DEPDIR)/CameraCommand.Po
	-rm -f ./$(DEPDIR)/Captaincy.Po
	-rm -f ./$(DEPDIR)/ChannelFSM.Po
	-rm -f ./$(DEPDIR)/Chatting.Po
	-rm -f ./$(DEPDIR)/Clamp.Po
	-rm -f ./$(DEPDIR)/Clipper.Po
	-rm -f ./$(DEPDIR)/Clouds.Po
	-rm -f ./$(DEPDIR)/ColPick.Po
	-rm -f ./$(DEPDIR)/Collision.Po
	-rm -f ./$(DEPDIR)/Color.Po
	-rm -f ./$(DEPDIR)/CommandLayer.Po
	-rm -f ./$(DEPDIR)/CommandNetwork.Po
	-rm -f ./$(DEPDIR)/CommandWrap.Po
	-rm -f ./$(DEPDIR)/ConsMgr.Po
	-rm -f ./$(DEPDIR)/Crates.Po
	-rm -f ./$(DEPDIR)/Damage.Po
	-rm -f ./$(DEPDIR)/Debug.Po
	-rm -f ./$(DEPDIR)/Demo.Po
	-rm -f ./$(DEPDIR)/Dock.Po
	-rm -f ./$(DEPDIR)/ETG.Po
	-rm -f ./$(DEPDIR)/Eval.Po
	-rm -f ./$(DEPDIR)/FEFlow.Po
	-rm -f ./$(DEPDIR)/FEReg.Po
	-rm -f ./$(DEPDIR)/File.Po
	-rm -f ./$(DEPDIR)/FlightMan.Po
	-rm -f ./$(DEPDIR)/FontReg.Po
	-rm -f ./$(DEPDIR)/Formation.Po
	-rm -f ./$(DEPDIR)/GameChat.Po
	-rm -f ./$(DEPDIR)/GamePick.Po
	-rm -f ./$(DEPDIR)/Globals.Po
	-rm -f ./$(DEPDIR)/Gun.Po
	-rm -f ./$(DEPDIR)/HS.Po
	-rm -f ./$(DEPDIR)/Hash.Po
	-rm -f ./$(DEPDIR)/HorseRace.Po
	-rm -f ./$(DEPDIR)/InfoOverlay.Po
	-rm -f ./$(DEPDIR)/KAS.Po
	-rm -f ./$(DEPDIR)/KASFunc.Po
	-rm -f ./$(DEPDIR)/KNITransform.Po
	-rm -f ./$(DEPDIR)/Key.Po
	-rm -f ./$(DEPDIR)/KeyBindings.Po
	-rm -f ./$(DEPDIR)/LOD.Po
	-rm -f ./$(DEPDIR)/LagPrint.Po
	-rm -f ./$(DEPDIR)/LaunchMgr.Po
	-rm -f ./$(DEPDIR)/LevelLoad.Po
	-rm -f ./$(DEPDIR)/Light.Po
	-rm -f ./$(DEPDIR)/LinkedList.Po
	-rm -f ./$(DEPDIR)/MEX.Po
	-rm -f ./$(DEPDIR)/MadLinkIn.Po
	-rm -f ./$(DEPDIR)/Matrix.Po
	-rm -f ./$(DEPDIR)/Memory.Po
	-rm -f ./$(DEPDIR)/Mesh.Po
	-rm -f ./$(DEPDIR)/MeshAnim.Po
	-rm -f ./$(DEPDIR)/MultiplayerGame.Po
	-rm -f ./$(DEPDIR)/MultiplayerLANGame.Po
	-rm -f ./$(DEPDIR)/NIS.Po
	-rm -f ./$(DEPDIR)/NavLights.Po
	-rm -f ./$(DEPDIR)/Nebulae.Po
	-rm -f ./$(DEPDIR)/NetCheck.Po
	-rm -f ./$(DEPDIR)/ObjTypes.Po
	-rm -f ./$(DEPDIR)/Objectives.Po
	-rm -f ./$(DEPDIR)/Options.Po
	-rm -f ./$(DEPDIR)/Particle.Po
	-rm -f ./$(DEPDIR)/Physics.Po
	-rm -f ./$(DEPDIR)/PiePlate.Po
	-rm -f ./$(DEPDIR)/Ping.Po
	-rm -f ./$(DEPDIR)/PlugScreen.Po
	-rm -f ./$(DEPDIR)/ProfileTimers.Po
	-rm -f ./$(DEPDIR)/Randy.Po
	-rm -f ./$(DEPDIR)/Region.Po
	-rm -f ./$(DEPDIR)/ResCollect.Po
	-rm -f ./$(DEPDIR)/ResearchAPI.Po
	-rm -f ./$(DEPDIR)/ResearchGUI.Po
	-rm -f ./$(DEPDIR)/SaveGame.Po
	-rm -f ./$(DEPDIR)/ScenPick.Po
	-rm -f ./$(DEPDIR)/Scroller.Po
	-rm -f ./$(DEPDIR)/Select.Po
	-rm -f ./$(DEPDIR)/Sensors.Po
	-rm -f ./$(DEPDIR)/Shader.Po
	-rm -f ./$(DEPDIR)/ShipSelect.Po
	-rm -f ./$(DEPDIR)/ShipView.Po
	-rm -f ./$(DEPDIR)/SinglePlayer.Po
	-rm -f ./$(DEPDIR)/SoundEvent.Po
	-rm -f ./$(DEPDIR)/SoundEventPlay.Po
	-rm -f ./$(DEPDIR)/SoundEventStop.Po
	-rm -f ./$(DEPDIR)/SpeechEvent.Po
	-rm -f ./$(DEPDIR)/Star3d.Po
	-rm -f ./$(DEPDIR)/StatScript.Po
	-rm -f ./$(DEPDIR)/Stats.Po
	-rm -f ./$(DEPDIR)/StringSupport.Po
	-rm -f ./$(DEPDIR)/Subtitle.Po
	-rm -f ./$(DEPDIR)/Tactical.Po
	-rm -f ./$(DEPDIR)/Tactics.Po
	-rm -f ./$(DEPDIR)/Task.Po
	-rm -f ./$(DEPDIR)/TaskBar.Po
	-rm -f ./$(DEPDIR)/Teams.Po
	-rm -f ./$(DEPDIR)/Timer.Po
	-rm -f ./$(DEPDIR)/TitanNet.Po
	-rm -f ./$(DEPDIR)/Tracking.Po
	-rm -f ./$(DEPDIR)/TradeMgr.Po
	-rm -f ./$(DEPDIR)/Trails.Po
	-rm -f ./$(DEPDIR)/Transformer.Po
	-rm -f ./$(DEPDIR)/Tutor.Po
	-rm -f ./$(DEPDIR)/Tweak.Po
	-rm -f ./$(DEPDIR)/Twiddle.Po
	-rm -f ./$(DEPDIR)/Types.Po
	-rm -f ./$(DEPDIR)/UIControls.Po
	-rm -f ./$(DEPDIR)/Undo.Po
	-rm -f ./$(DEPDIR)/UnivUpdate.Po
	-rm -f ./$(DEPDIR)/Universe.Po
	-rm -f ./$(DEPDIR)/Vector.Po
	-rm -f ./$(DEPDIR)/Volume.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/AIAttackMan.Po
	-rm -f ./$(DEPDIR)/AIDefenseMan.Po
	-rm -f ./$(DEPDIR)/AIEvents.Po
	-rm -f ./$(DEPDIR)/AIFleetMan.Po
	-rm -f ./$(DEPDIR)/AIHandler.Po
	-rm -f ./$(DEPDIR)/AIMoves.Po
	-rm -f ./$(DEPDIR)/AIOrders.Po
	-rm -f ./$(DEPDIR)/AIPlayer.Po
	-rm -f ./$(DEPDIR)/AIResourceMan.Po
	-rm -f ./$(DEPDIR)/AIShip.Po
	-rm -f ./$(DEPDIR)/AITeam.Po
	-rm -f ./$(DEPDIR)/AITrack.Po
	-rm -f ./$(DEPDIR)/AIUtilities.Po
	-rm -f ./$(DEPDIR)/AIVar.Po
	-rm -f ./$(DEPDIR)/Alliance.Po
	-rm -f ./$(DEPDIR)/Animatic.Po
	-rm -f ./$(DEPDIR)/Attack.Po
	-rm -f ./$(DEPDIR)/AutoDownloadMap.Po
	-rm -f ./$(DEPDIR)/AutoLOD.Po
	-rm -f ./$(DEPDIR)/B-Spline.Po
	-rm -f ./$(DEPDIR)/BMP.Po
	-rm -f ./$(DEPDIR)/BTG.Po
	-rm -f ./$(DEPDIR)/Battle.Po
	-rm -f ./$(DEPDIR)/BigFile.Po
	-rm -f ./$(DEPDIR)/Blobs.Po
	-rm -f ./$(DEPDIR)/Bounties.Po
	-rm -f ./$(DEPDIR)/Camera.Po
	-rm -f ./$(DEPDIR)/CameraCommand.Po
	-rm -f ./$(DEPDIR)/Captaincy.Po
	-rm -f ./$(DEPDIR)/ChannelFSM.Po
	-rm -f ./$(DEPDIR)/Chatting.Po
	-rm -f ./$(DEPDIR)/Clamp.Po
	-rm -f ./$(DEPDIR)/Clipper.Po
	-rm -f ./$(DEPDIR)/Clouds.Po
	-rm -f ./$(DEPDIR)/ColPick.Po
	-rm -f ./$(DEPDIR)/Collision.Po
	-rm -f ./$(DEPDIR)/Color.Po
	-rm -f ./$(DEPDIR)/CommandLayer.Po
	-rm -f ./$(DEPDIR)/CommandNetwork.Po
	-rm -f ./$(DEPDIR)/CommandWrap.Po
	-rm -f ./$(DEPDIR)/ConsMgr.Po
	-rm -f ./$(DEPDIR)/Crates.Po
	-rm -f ./$(DEPDIR)/Damage.Po
	-rm -f ./$(DEPDIR)/Debug.Po
	-rm -f ./$(DEPDIR)/Demo.Po
	-rm -f ./$(DEPDIR)/Dock.Po
	-rm -f ./$(DEPDIR)/ETG.Po
	-rm -f ./$(DEPDIR)/Eval.Po
	-rm -f ./$(DEPDIR)/FEFlow.Po
	-rm -f ./$(DEPDIR)/FEReg.Po
	-rm -f ./$(DEPDIR)/File.Po
	-rm -f ./$(DEPDIR)/FlightMan.Po
	-rm -f ./$(DEPDIR)/FontReg.Po
	-rm -f ./$(DEPDIR)/Formation.Po
	-rm -f ./$(DEPDIR)/GameChat.Po
	-rm -f ./$(DEPDIR)/GamePick.Po
	-rm -f ./$(DEPDIR)/Globals.Po
	-rm -f ./$(DEPDIR)/Gun.Po
	-rm -f ./$(DEPDIR)/HS.Po
	-rm -f ./$(DEPDIR)/Hash.Po
	-rm -f ./$(DEPDIR)/HorseRace.Po
	-rm -f ./$(DEPDIR)/InfoOverlay.Po
	-rm -f ./$(DEPDIR)/KAS.Po
	-rm -f ./$(DEPDIR)/KASFunc.Po
	-rm -f ./$(DEPDIR)/KNITransform.Po
	-rm -f ./$(DEPDIR)/Key.Po
	-rm -f ./$(DEPDIR)/KeyBindings.Po
	-rm -f ./$(DEPDIR)/LOD.Po
	-rm -f ./$(DEPDIR)/LagPrint.Po
	-rm -f ./$(DEPDIR)/LaunchMgr.Po
	-rm -f ./$(DEPDIR)/LevelLoad.Po
	-rm -f ./$(DEPDIR)/Light.Po
	-rm -f ./$(DEPDIR)/LinkedList.Po
	-rm -f ./$(DEPDIR)/MEX.Po
	-rm -f ./$(DEPDIR)/MadLinkIn.Po
	-rm -f ./$(DEPDIR)/Matrix.Po
	-rm -f ./$(DEPDIR)/Memory.Po
	-rm -f ./$(DEPDIR)/Mesh.Po
	-rm -f ./$(DEPDIR)/MeshAnim.Po
	-rm -f ./$(DEPDIR)/MultiplayerGame.Po
	-rm -f ./$(DEPDIR)/MultiplayerLANGame.Po
	-rm -f ./$(DEPDIR)/NIS.Po
	-rm -f ./$(DEPDIR)/NavLights.Po
	-rm -f ./$(DEPDIR)/Nebulae.Po
	-rm -f ./$(DEPDIR)/NetCheck.Po
	-rm -f ./$(DEPDIR)/ObjTypes.Po
	-rm -f ./$(DEPDIR)/Objectives.Po
	-rm -f ./$(DEPDIR)/Options.Po
	-rm -f ./$(DEPDIR)/Particle.Po
	-rm -f ./$(DEPDIR)/Physics.Po
	-rm -f ./$(DEPDIR)/PiePlate.Po
	-rm -f ./$(DEPDIR)/Ping.Po
	-rm -f ./$(DEPDIR)/PlugScreen.Po
	-rm -f ./$(DEPDIR)/ProfileTimers.Po
	-rm -f ./$(DEPDIR)/Randy.Po
	-rm -f ./$(DEPDIR)/Region.Po
	-rm -f ./$(DEPDIR)/ResCollect.Po
	-rm -f ./$(DEPDIR)/ResearchAPI.Po
	-rm -f ./$(DEPDIR)/ResearchGUI.Po
	-rm -f ./$(DEPDIR)/SaveGame.Po
	-rm -f ./$(DEPDIR)/ScenPick.Po
	-rm -f ./$(DEPDIR)/Scroller.Po
	-rm -f ./$(DEPDIR)/Select.Po
	-rm -f ./$(DEPDIR)/Sensors.Po
	-rm -f ./$(DEPDIR)/Shader.Po
	-rm -f ./$(DEPDIR)/ShipSelect.Po
	-rm -f ./$(DEPDIR)/ShipView.Po
	-rm -f ./$(DEPDIR)/SinglePlayer.Po
	-rm -f ./$(DEPDIR)/SoundEvent.Po
	-rm -f ./$(DEPDIR)/SoundEventPlay.Po
	-rm -f ./$(DEPDIR)/SoundEventStop.Po
	-rm -f ./$(DEPDIR)/SpeechEvent.Po
	-rm -f ./$(DEPDIR)/Star3d.Po
	-rm -f ./$(DEPDIR)/StatScript.Po
	-rm -f ./$(DEPDIR)/Stats.Po
	-rm -f ./$(DEPDIR)/StringSupport.Po
	-rm -f ./$(DEPDIR)/Subtitle.Po
	-rm -f ./$(DEPDIR)/Tactical.Po
	-rm -f ./$(DEPDIR)/Tactics.Po
	-rm -f ./$(DEPDIR)/Task.Po
	-rm -f ./$(DEPDIR)/TaskBar.Po
	-rm -f ./$(DEPDIR)/Teams.Po
	-rm -f ./$(DEPDIR)/Timer.Po
	-rm -f ./$(DEPDIR)/TitanNet.Po
	-rm -f ./$(DEPDIR)/Tracking.Po
	-rm -f ./$(DEPDIR)/TradeMgr.Po
	-rm -f ./$(DEPDIR)/Trails.Po
	-rm -f ./$(DEPDIR)/Transformer.Po
	-rm -f ./$(DEPDIR)/Tutor.Po
	-rm -f ./$(DEPDIR)/Tweak.Po
	-rm -f ./$(DEPDIR)/Twiddle.Po
	-rm -f ./$(DEPDIR)/Types.Po
	-rm -f ./$(DEPDIR)/UIControls.Po
	-rm -f ./$(DEPDIR)/Undo.Po
	-rm -f ./$(DEPDIR)/UnivUpdate.Po
	-rm -f ./$(DEPDIR)/Universe.Po
	-rm -f ./$(DEPDIR)/Vector.Po
	-rm -f ./$(DEPDIR)/Volume.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-generic clean-libtool clean-noinstLIBRARIES \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


# KNITransform.c requires SSE instructions, but we don't want to force SSE
# instructions throughout the project.
KNITransform.o: KNITransform.c
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#KNITransform.o: StubTransform.c
#	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
#	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
#	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
#	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
#	fi
# Optimization thrashes Task.c, ETG.c, and FastMath.c (although we should
# definitely fix FastMath.c at some point, being that it is straight C).
Task.o: Task.c
	if $(COMPILE) -O0 -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi

ETG.o: ETG.c wrapped_functions.h
	if $(COMPILE) -O0 -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi

FastMath.o: FastMath.c
	if $(COMPILE) -O0 -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi

wrapped_functions.h: functions.h wrap.h wrap_types.h
	if $(COMPILE) -O0 -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -E -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
